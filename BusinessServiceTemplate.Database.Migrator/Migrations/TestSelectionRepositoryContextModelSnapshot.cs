// <auto-generated />
using System;
using BusinessServiceTemplate.DataAccess.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BusinessServiceTemplate.Database.Migrator.Migrations
{
    [DbContext(typeof(TestSelectionRepositoryContext))]
    partial class TestSelectionRepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BusinessServiceTemplate.DataAccess.Entities.SC_AMA", b =>
                {
                    b.Property<string>("AMACode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<decimal>("AMAFee")
                        .HasColumnType("numeric");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("MedicareItem")
                        .HasColumnType("integer");

                    b.Property<decimal?>("ScheduleFee")
                        .HasColumnType("numeric");

                    b.HasKey("AMACode");

                    b.HasIndex("MedicareItem");

                    b.ToTable("SC_AMA");
                });

            modelBuilder.Entity("BusinessServiceTemplate.DataAccess.Entities.SC_Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Shortcode")
                        .HasColumnType("text");

                    b.Property<string>("Symbol")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SC_Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Country = "Euro",
                            Name = "Currency 1",
                            Shortcode = "EUR",
                            Symbol = "€"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Country = "USA",
                            Name = "Currency 2",
                            Shortcode = "USD",
                            Symbol = "$"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Country = "China",
                            Name = "Currency 3",
                            Shortcode = "CNY",
                            Symbol = "¥"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Country = "Australia",
                            Name = "Currency 4",
                            Shortcode = "AUD",
                            Symbol = "$"
                        });
                });

            modelBuilder.Entity("BusinessServiceTemplate.DataAccess.Entities.SC_MBS", b =>
                {
                    b.Property<int>("ItemNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ItemNum"));

                    b.Property<string>("AnaesChange")
                        .HasColumnType("text");

                    b.Property<int?>("BasicUnits")
                        .HasColumnType("integer");

                    b.Property<double?>("Benefit100")
                        .HasColumnType("double precision");

                    b.Property<string>("BenefitStartDate")
                        .HasColumnType("text");

                    b.Property<string>("BenefitType")
                        .HasColumnType("text");

                    b.Property<int?>("Category")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DescriptionStartDate")
                        .HasColumnType("text");

                    b.Property<string>("DescriptorChange")
                        .HasColumnType("text");

                    b.Property<string>("EMSNCap")
                        .HasColumnType("text");

                    b.Property<string>("EMSNChange")
                        .HasColumnType("text");

                    b.Property<string>("EMSNChangeDate")
                        .HasColumnType("text");

                    b.Property<string>("EMSNDescription")
                        .HasColumnType("text");

                    b.Property<string>("EMSNEndDate")
                        .HasColumnType("text");

                    b.Property<double?>("EMSNFixedCapAmount")
                        .HasColumnType("double precision");

                    b.Property<double?>("EMSNMaximumCap")
                        .HasColumnType("double precision");

                    b.Property<double?>("EMSNPercentageCap")
                        .HasColumnType("double precision");

                    b.Property<string>("EMSNStartDate")
                        .HasColumnType("text");

                    b.Property<string>("FeeChange")
                        .HasColumnType("text");

                    b.Property<string>("FeeStartDate")
                        .HasColumnType("text");

                    b.Property<string>("FeeType")
                        .HasColumnType("text");

                    b.Property<string>("Group")
                        .HasColumnType("text");

                    b.Property<string>("ItemChange")
                        .HasColumnType("text");

                    b.Property<string>("ItemEndDate")
                        .HasColumnType("text");

                    b.Property<string>("ItemStartDate")
                        .HasColumnType("text");

                    b.Property<string>("ItemType")
                        .HasColumnType("text");

                    b.Property<string>("NewItem")
                        .HasColumnType("text");

                    b.Property<string>("ProviderType")
                        .HasColumnType("text");

                    b.Property<string>("QFEEndDate")
                        .HasColumnType("text");

                    b.Property<string>("QFEStartDate")
                        .HasColumnType("text");

                    b.Property<double?>("ScheduleFee")
                        .HasColumnType("double precision");

                    b.Property<int?>("SubGroup")
                        .HasColumnType("integer");

                    b.Property<int?>("SubHeading")
                        .HasColumnType("integer");

                    b.Property<string>("SubItemNum")
                        .HasColumnType("text");

                    b.HasKey("ItemNum");

                    b.ToTable("SC_MBS");
                });

            modelBuilder.Entity("BusinessServiceTemplate.DataAccess.Entities.SC_Panel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("DescriptionVisibility")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<bool?>("PriceVisibility")
                        .HasColumnType("boolean");

                    b.Property<int>("TestSelectionId")
                        .HasColumnType("integer");

                    b.Property<bool?>("Visibility")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("TestSelectionId");

                    b.ToTable("SC_Panels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrencyId = 1,
                            Description = "Panel1",
                            DescriptionVisibility = true,
                            IsDeleted = false,
                            Name = "Panel1",
                            Price = 10.01m,
                            PriceVisibility = true,
                            TestSelectionId = 2
                        },
                        new
                        {
                            Id = 2,
                            CurrencyId = 2,
                            Description = "Panel2",
                            DescriptionVisibility = true,
                            IsDeleted = false,
                            Name = "Panel2",
                            Price = 20.01m,
                            PriceVisibility = true,
                            TestSelectionId = 1
                        },
                        new
                        {
                            Id = 3,
                            CurrencyId = 3,
                            Description = "Panel3",
                            DescriptionVisibility = true,
                            IsDeleted = false,
                            Name = "Panel3",
                            Price = 30.01m,
                            PriceVisibility = true,
                            TestSelectionId = 1
                        });
                });

            modelBuilder.Entity("BusinessServiceTemplate.DataAccess.Entities.SC_Panel_Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PanelId")
                        .HasColumnType("integer");

                    b.Property<int>("TestId")
                        .HasColumnType("integer");

                    b.Property<bool?>("Visibility")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("PanelId");

                    b.HasIndex("TestId");

                    b.ToTable("SC_Panel_Tests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PanelId = 1,
                            TestId = 1,
                            Visibility = true
                        },
                        new
                        {
                            Id = 2,
                            PanelId = 1,
                            TestId = 2,
                            Visibility = false
                        },
                        new
                        {
                            Id = 3,
                            PanelId = 2,
                            TestId = 1,
                            Visibility = true
                        },
                        new
                        {
                            Id = 4,
                            PanelId = 1,
                            TestId = 2,
                            Visibility = false
                        });
                });

            modelBuilder.Entity("BusinessServiceTemplate.DataAccess.Entities.SC_Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("DescriptionVisibility")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SC_Tests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "test1",
                            DescriptionVisibility = true,
                            IsDeleted = false,
                            Name = "test1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "test2",
                            DescriptionVisibility = true,
                            IsDeleted = false,
                            Name = "test2"
                        });
                });

            modelBuilder.Entity("BusinessServiceTemplate.DataAccess.Entities.SC_TestSelection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("DescriptionVisibility")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SpecialityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SC_TestSelections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Test Selection 1",
                            DescriptionVisibility = true,
                            IsDeleted = false,
                            Name = "Test Selection 1",
                            SpecialityId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Test Selection 2",
                            DescriptionVisibility = false,
                            IsDeleted = false,
                            Name = "Test Selection 2",
                            SpecialityId = 2
                        });
                });

            modelBuilder.Entity("BusinessServiceTemplate.DataAccess.Entities.SC_AMA", b =>
                {
                    b.HasOne("BusinessServiceTemplate.DataAccess.Entities.SC_MBS", "MedibankSchedule")
                        .WithMany("AustralianMedicalAssociations")
                        .HasForeignKey("MedicareItem");

                    b.Navigation("MedibankSchedule");
                });

            modelBuilder.Entity("BusinessServiceTemplate.DataAccess.Entities.SC_Panel", b =>
                {
                    b.HasOne("BusinessServiceTemplate.DataAccess.Entities.SC_Currency", "Currency")
                        .WithMany("Panels")
                        .HasForeignKey("CurrencyId");

                    b.HasOne("BusinessServiceTemplate.DataAccess.Entities.SC_TestSelection", "TestSelection")
                        .WithMany("Panels")
                        .HasForeignKey("TestSelectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("TestSelection");
                });

            modelBuilder.Entity("BusinessServiceTemplate.DataAccess.Entities.SC_Panel_Test", b =>
                {
                    b.HasOne("BusinessServiceTemplate.DataAccess.Entities.SC_Panel", "Panels")
                        .WithMany()
                        .HasForeignKey("PanelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessServiceTemplate.DataAccess.Entities.SC_Test", "Tests")
                        .WithMany()
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Panels");

                    b.Navigation("Tests");
                });

            modelBuilder.Entity("BusinessServiceTemplate.DataAccess.Entities.SC_Currency", b =>
                {
                    b.Navigation("Panels");
                });

            modelBuilder.Entity("BusinessServiceTemplate.DataAccess.Entities.SC_MBS", b =>
                {
                    b.Navigation("AustralianMedicalAssociations");
                });

            modelBuilder.Entity("BusinessServiceTemplate.DataAccess.Entities.SC_TestSelection", b =>
                {
                    b.Navigation("Panels");
                });
#pragma warning restore 612, 618
        }
    }
}
